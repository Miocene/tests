"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[2208],{"./src/components/experimental/experiment_badge/experiment_badge.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomPlacement:()=>CustomPlacement,Default:()=>Default,WithHelpPageUrl:()=>WithHelpPageUrl,default:()=>experiment_badge_stories});var experiment_badge=__webpack_require__("./src/components/experimental/experiment_badge/experiment_badge.vue");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==typeof i?i:i+""}function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}var defaultValue=prop=>experiment_badge.default.props[prop].default,generateProps=function(){var{helpPageUrl=defaultValue("helpPageUrl"),popoverPlacement=defaultValue("popoverPlacement"),type=defaultValue("type")}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{helpPageUrl,popoverPlacement,type}},Template=(args,_ref)=>{var{argTypes}=_ref;return{components:{GlExperimentBadge:experiment_badge.default},props:Object.keys(argTypes),template:"\n    <div class='gl-h-13'>\n      <gl-experiment-badge\n        :help-page-url='helpPageUrl'\n        :popover-placement='popoverPlacement'\n        :type='type' />\n    </div>\n  "}},Default=Template.bind({});Default.args=generateProps();var WithHelpPageUrl=Template.bind({});WithHelpPageUrl.args=_objectSpread({},generateProps({helpPageUrl:"https://docs.gitlab.com/ee/policy/experiment-beta-support.html#experiment"}));var CustomPlacement=Template.bind({});CustomPlacement.args=_objectSpread({},generateProps({popoverPlacement:"right"}));let experiment_badge_stories={title:"experimental/experiment_badge",component:experiment_badge.default,tags:["skip-visual-test"],parameters:{docs:{description:{component:'The component is representing a badge, marking the experimental features.\nIt is supposed to be used with the AI experiments, and comes with a popover explaining\nwhat experiment means.\n\n## Usage\n\n```html\n<gl-experiment-badge help-page-url="https://gitlab.com" popover-placement="bottom" />\n```\n'}}},argTypes:{}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlExperimentBadge\n  },\n  props: Object.keys(argTypes),\n  template: `\n    <div class='gl-h-13'>\n      <gl-experiment-badge\n        :help-page-url='helpPageUrl'\n        :popover-placement='popoverPlacement'\n        :type='type' />\n    </div>\n  `\n})",...Default.parameters?.docs?.source}}},WithHelpPageUrl.parameters={...WithHelpPageUrl.parameters,docs:{...WithHelpPageUrl.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlExperimentBadge\n  },\n  props: Object.keys(argTypes),\n  template: `\n    <div class='gl-h-13'>\n      <gl-experiment-badge\n        :help-page-url='helpPageUrl'\n        :popover-placement='popoverPlacement'\n        :type='type' />\n    </div>\n  `\n})",...WithHelpPageUrl.parameters?.docs?.source}}},CustomPlacement.parameters={...CustomPlacement.parameters,docs:{...CustomPlacement.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlExperimentBadge\n  },\n  props: Object.keys(argTypes),\n  template: `\n    <div class='gl-h-13'>\n      <gl-experiment-badge\n        :help-page-url='helpPageUrl'\n        :popover-placement='popoverPlacement'\n        :type='type' />\n    </div>\n  `\n})",...CustomPlacement.parameters?.docs?.source}}}}}]);