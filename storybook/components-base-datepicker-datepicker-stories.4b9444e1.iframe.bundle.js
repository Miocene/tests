(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[2342],{"./src/utils/stories_utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>disableControls});var disableControls=function(){var controls=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return Object.fromEntries(controls.map(control=>[control,{control:{disable:!0}}]))}},"./src/utils/story_decorators/container.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{F:()=>makeContainer});var makeContainer=function(style){var tag=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"div";return Story=>({render:h=>h(tag,{style},[h(Story())])})}},"./node_modules/mockdate/src/mockdate.js":module=>{module.exports=function(){"use strict";var _Date=Date,_getTimezoneOffset=Date.prototype.getTimezoneOffset,now=null;function MockDate(y,m,d,h,M,s,ms){var date;switch(arguments.length){case 0:date=null!==now?new _Date(now):new _Date;break;case 1:date=new _Date(y);break;default:date=new _Date(y,m,d=void 0===d?1:d,h=h||0,M=M||0,s=s||0,ms=ms||0)}return date}return MockDate.UTC=_Date.UTC,MockDate.now=function(){return new MockDate().valueOf()},MockDate.parse=function(dateString){return _Date.parse(dateString)},MockDate.toString=function(){return _Date.toString()},MockDate.prototype=_Date.prototype,{set:function set(date,timezoneOffset){var dateObj=new Date(date);if(isNaN(dateObj.getTime()))throw TypeError("mockdate: The time set is an invalid date: "+date);"number"==typeof timezoneOffset&&(MockDate.prototype.getTimezoneOffset=function(){return timezoneOffset}),Date=MockDate,date.valueOf&&(date=date.valueOf()),now=dateObj.valueOf()},reset:function reset(){(Date=_Date).prototype.getTimezoneOffset=_getTimezoneOffset}}}()},"./src/components/base/datepicker/datepicker.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomTrigger:()=>CustomTrigger,Default:()=>Default,Widths:()=>Widths,WithClearButton:()=>WithClearButton,default:()=>datepicker_stories});var form_group=__webpack_require__("./src/components/base/form/form_group/form_group.vue"),constants=__webpack_require__("./src/utils/constants.js"),stories_utils=__webpack_require__("./src/utils/stories_utils.js");__webpack_require__("./node_modules/mockdate/src/mockdate.js");var container=__webpack_require__("./src/utils/story_decorators/container.js"),datepicker=__webpack_require__("./src/components/base/datepicker/datepicker.vue");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==typeof i?i:i+""}function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}var defaults={components:{GlFormGroup:form_group.default,GlDatepicker:datepicker.default},mixins:[{}]},defaultDate=new Date(2020,0,15),defaultMinDate=new Date(2020,0,1),defaultMaxDate=new Date(2020,2,31),generateProps=function(){var{minDate=defaultMinDate,maxDate=defaultMaxDate}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{minDate,maxDate}},Default=(_args,_ref)=>{var{argTypes}=_ref;return _objectSpread(_objectSpread({},defaults),{},{props:Object.keys(argTypes),data:()=>({pickerValue:defaultDate}),template:'<gl-datepicker :max-date="maxDate" :min-date="minDate" :start-opened="true" v-model="pickerValue" />'})};Default.args=generateProps();var CustomTrigger=(_args,_ref2)=>{var{argTypes}=_ref2;return _objectSpread(_objectSpread({},defaults),{},{props:Object.keys(argTypes),data:()=>({pickerValue:null}),template:'\n    <div>\n      <div class="dropdown">\n        <button type="button" class="dropdown-menu-toggle">\n          <span class="dropdown-toggle-text"> Start date: {{value}} </span>\n        </button>\n      </div>\n      <gl-datepicker v-model="pickerValue" target=".dropdown-menu-toggle" :container="null" />\n    </div>'})};CustomTrigger.args=generateProps();var WithClearButton=(_args,_ref3)=>{var{argTypes}=_ref3;return _objectSpread(_objectSpread({},defaults),{},{props:Object.keys(argTypes),data:()=>({pickerValue:defaultDate}),template:'<gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" />'})};WithClearButton.args=generateProps();var Widths=(_args,_ref4)=>{var{argTypes}=_ref4;return _objectSpread(_objectSpread({},defaults),{},{props:Object.keys(argTypes),data:()=>({datepickerWidthOptionsMap:constants.Px,pickerValue:defaultDate}),template:'\n    <div class="gl-display-flex gl-flex-direction-column gl-gap-3">\n      <gl-form-group label="Width: sm">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="sm" />\n      </gl-form-group>\n      <gl-form-group label="Width: md (default)">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="md" />\n      </gl-form-group>\n      <gl-form-group label="Width: lg">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="lg" />\n      </gl-form-group>\n      <gl-form-group label="Width: xl">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="xl" />\n      </gl-form-group>\n    </div>\n  '})};Widths.args=generateProps();let datepicker_stories={title:"base/datepicker",component:datepicker.default,decorators:[(0,container.F)({height:"280px"})],parameters:{docs:{description:{component:"Date picker allows users to choose and input a date by manually typing the date into the input field\nor by using a calendar-like dropdown.\n\n### Warning\n\nBe careful when binding a date value using `value` prop. `value` is a watched property and Date\npicker will emit `input` event on _initial load_. Alternatively, use `defaultDate` to set the\ninitial date then receive updated date values through `input` events.\n"}}},argTypes:_objectSpread(_objectSpread({},(0,stories_utils.W)(["target","container","value","startRange","endRange","disableDayFn","firstDay","ariaLabel","placeholder","autocomplete","disabled","displayField","startOpened","defaultDate","i18n","theme","showClearButton","inputId","inputLabel","inputName"])),{},{minDate:{control:"date"},maxDate:{control:"date"},width:{options:constants.Px,control:"select"}})};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(_args, {\n  argTypes\n}) => ({\n  ...defaults,\n  props: Object.keys(argTypes),\n  data() {\n    return {\n      pickerValue: defaultDate\n    };\n  },\n  template: `<gl-datepicker :max-date="maxDate" :min-date="minDate" :start-opened="true" v-model="pickerValue" />`\n})',...Default.parameters?.docs?.source}}},CustomTrigger.parameters={...CustomTrigger.parameters,docs:{...CustomTrigger.parameters?.docs,source:{originalSource:'(_args, {\n  argTypes\n}) => ({\n  ...defaults,\n  props: Object.keys(argTypes),\n  data() {\n    return {\n      pickerValue: null\n    };\n  },\n  template: `\n    <div>\n      <div class="dropdown">\n        <button type="button" class="dropdown-menu-toggle">\n          <span class="dropdown-toggle-text"> Start date: {{value}} </span>\n        </button>\n      </div>\n      <gl-datepicker v-model="pickerValue" target=".dropdown-menu-toggle" :container="null" />\n    </div>`\n})',...CustomTrigger.parameters?.docs?.source}}},WithClearButton.parameters={...WithClearButton.parameters,docs:{...WithClearButton.parameters?.docs,source:{originalSource:'(_args, {\n  argTypes\n}) => ({\n  ...defaults,\n  props: Object.keys(argTypes),\n  data() {\n    return {\n      pickerValue: defaultDate\n    };\n  },\n  template: `<gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" />`\n})',...WithClearButton.parameters?.docs?.source}}},Widths.parameters={...Widths.parameters,docs:{...Widths.parameters?.docs,source:{originalSource:'(_args, {\n  argTypes\n}) => ({\n  ...defaults,\n  props: Object.keys(argTypes),\n  data() {\n    return {\n      datepickerWidthOptionsMap,\n      pickerValue: defaultDate\n    };\n  },\n  template: `\n    <div class="gl-display-flex gl-flex-direction-column gl-gap-3">\n      <gl-form-group label="Width: sm">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="sm" />\n      </gl-form-group>\n      <gl-form-group label="Width: md (default)">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="md" />\n      </gl-form-group>\n      <gl-form-group label="Width: lg">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="lg" />\n      </gl-form-group>\n      <gl-form-group label="Width: xl">\n        <gl-datepicker showClearButton :max-date="maxDate" :min-date="minDate" v-model="pickerValue" width="xl" />\n      </gl-form-group>\n    </div>\n  `\n})',...Widths.parameters?.docs?.source}}}}}]);