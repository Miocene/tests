"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[3615],{"./src/utils/play_utils.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>triggerBlurEvent});var _storybook_test__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){reject(error);return}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)})}}var triggerBlurEvent=function(){var _ref=_asyncToGenerator(function*(){return _storybook_test__WEBPACK_IMPORTED_MODULE_0__.mV.pointer([{keys:"[MouseLeft]",coords:{x:0,y:0}}])});return function triggerBlurEvent(){return _ref.apply(this,arguments)}}()},"./src/components/base/filtered_search/filtered_search_term.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>filtered_search_term_stories});var portal_vue_common=__webpack_require__("./node_modules/portal-vue/dist/portal-vue.common.js"),vue_esm=__webpack_require__("./node_modules/vue/dist/vue.esm.js"),play_utils=__webpack_require__("./src/utils/play_utils.js"),common_story_options=__webpack_require__("./src/components/base/filtered_search/common_story_options.js"),filtered_search_term=__webpack_require__("./src/components/base/filtered_search/filtered_search_term.vue");vue_esm.default.use(portal_vue_common.ZP);var availableTokens=[{title:"Demo1",type:"demo1",icon:"label",token:{}},{title:"Demo2",type:"demo2",icon:"rocket",token:{}}],Default=(_args,_ref)=>{var{argTypes}=_ref;return{props:["active"],components:{GlFilteredSearchTerm:filtered_search_term.default},provide:common_story_options.provide,data:()=>({value:{data:"demo"},availableTokens}),template:'\n      <div>\n        <div> {{ value.data }} </div>\n        <div class="gl-border-1 gl-border-solid gl-border-gray-200">\n          <gl-filtered-search-term\n            v-model="value"\n            class="gl-h-full"\n            :active="active"\n            :available-tokens="availableTokens"\n          />\n        </div>\n        <div>\n          <portal-target name="portal" class="gl-relative" />\n        </div>\n      </div>\n    '}};Default.args=function(){var{active=!0}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{active}}(),Default.play=play_utils.d;let filtered_search_term_stories={title:"base/filtered-search/term",component:filtered_search_term.default,parameters:{docs:{description:{component:'The filtered search term is a component for managing "free input" in the filtered search component.\nIt is responsible for autocompleting available tokens and "converting" to a relevant\ncomponent when an autocomplete item is selected.\n\n## Usage\n\nThis component is internal and is not intended to be used by `@gitlab/ui` users.\n'}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(_args, {\n  argTypes\n}) => ({\n  props: [\'active\'],\n  components: {\n    GlFilteredSearchTerm\n  },\n  provide,\n  data() {\n    return {\n      value: {\n        data: \'demo\'\n      },\n      availableTokens\n    };\n  },\n  template: `\n      <div>\n        <div> {{ value.data }} </div>\n        <div class="gl-border-1 gl-border-solid gl-border-gray-200">\n          <gl-filtered-search-term\n            v-model="value"\n            class="gl-h-full"\n            :active="active"\n            :available-tokens="availableTokens"\n          />\n        </div>\n        <div>\n          <portal-target name="portal" class="gl-relative" />\n        </div>\n      </div>\n    `\n})',...Default.parameters?.docs?.source}}}}}]);