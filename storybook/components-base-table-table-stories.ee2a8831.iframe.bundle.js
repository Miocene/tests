"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[2021],{"./src/components/base/table/table.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Empty:()=>Empty,WithFilter:()=>WithFilter,WithStickyHeader:()=>WithStickyHeader,default:()=>table_stories});var form_input=__webpack_require__("./src/components/base/form/form_input/form_input.vue"),table=__webpack_require__("./src/components/base/table/table.vue");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==typeof i?i:i+""}function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}var components={GlTable:table.default},tableItems=[{column_one:"test",col_2:"ABC",col_three:1234},{column_one:"test2",col_2:"DEF",col_three:5678},{column_one:"test3",col_2:"GHI",col_three:9101}],generateProps=function(){var{stickyHeader=!1,fixed=!1,footClone=!1,stacked=!1,caption=""}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{stickyHeader,fixed,footClone,stacked,caption}},Default=(args,_ref)=>{var{argTypes}=_ref;return{components,props:Object.keys(argTypes),template:'\n  <gl-table\n    :sticky-header="stickyHeader"\n    :items="$options.items"\n    :fields="$options.fields"\n    :fixed="fixed"\n    :stacked="stacked"\n    :foot-clone="footClone"\n    sort-by="col_three"\n    sort-desc\n    no-sort-reset\n    sort-direction="desc"\n    hover\n    selectable\n    selected-variant="primary"\n  >\n    <template v-if="caption" #table-caption>\n      {{ caption }}\n    </template>\n  </gl-table>\n',fields:[{key:"column_one",label:"First column",variant:"secondary",sortable:!0,isRowHeader:!1},{key:"col_2",label:"Second column",formatter:value=>value},{key:"col_three",sortable:!0,label:"Third column",formatter:value=>value,thClass:"gl-text-right",tdClass:"gl-text-right"}],items:tableItems}};Default.args=generateProps();var Empty=(args,_ref2)=>{var{argTypes}=_ref2;return{components,props:Object.keys(argTypes),template:"\n      <gl-table show-empty />\n    "}};Empty.parameters={controls:{disable:!0}};var WithFilter=(args,_ref3)=>{var{argTypes}=_ref3;return{components:_objectSpread(_objectSpread({},components),{},{GlFormInput:form_input.default}),props:Object.keys(argTypes),template:'<div class="gl-line-height-normal">\n      <gl-form-input v-model="filter" placeholder="Type to search" />\n      <br />\n      <gl-table\n              :sticky-header="stickyHeader"\n              :items="$options.items"\n              :fields="$options.fields"\n              :filter=filter\n              :fixed="fixed"\n              :stacked="stacked"\n              :foot-clone="footClone"\n              hover\n              selectable\n              selected-variant="primary"\n          />\n      </div>',items:tableItems,data:()=>({filter:null})}};WithFilter.args=generateProps();var WithStickyHeader=(args,_ref4)=>{var{argTypes}=_ref4;return{components:_objectSpread(_objectSpread({},components),{},{GlFormInput:form_input.default}),props:Object.keys(argTypes),template:'<div class="gl-line-height-normal">\n      <gl-form-input v-model="filter" placeholder="Type to search" />\n      <br />\n      <gl-table\n              :sticky-header="stickyHeader"\n              :items="$options.items"\n              :fields="$options.fields"\n              :filter=filter\n              :fixed="fixed"\n              :stacked="stacked"\n              :foot-clone="footClone"\n              hover\n              selectable\n              selected-variant="primary"\n          />\n      </div>',items:[...tableItems,...tableItems,...tableItems,...tableItems,...tableItems,...tableItems,...tableItems,...tableItems,...tableItems,...tableItems],data:()=>({filter:null})}};WithStickyHeader.args=generateProps({stickyHeader:!0});let table_stories={title:"base/table/table",component:table.default,parameters:{bootstrapComponent:"b-table",docs:{description:{component:"## Usage\n\nThe `gl-table` component wraps BootstrapVue `b-table` component. `b-table` provides a variety of\nslots for custom data rendering. You can learn more about them in the\n[component documentation](https://bootstrap-vue.org/docs/components/table).\nWhen using the component, pass in the `fields` prop as part of the `$options`, and give each table\ndata and table head its own styles if necessary.\n\n## Internationalization\n\nTo ensure we internationalize field labels, always pass an array of objects for the `fields` prop,\nlike mentioned in the implementation example.\n\n_Full documentation for the\n`field` prop [here.](https://bootstrap-vue.org/docs/components/table#fields-column-definitions)_\n\n## Use `GlTableLite` when possible\n\nIf you don't need all the features of `GlTable`, like filtering, sorting, or\npagination, use `GlTableLite` which offers a subset of `GlTable` features.\n\n## Implementation Example\n\n```html\n<script>\n  export default {\n    fields: [\n      {\n        key: 'column_one',\n        label: __('First column'),\n        thClass: 'w-60p',\n        tdClass: 'table-col d-flex'\n      },\n      {\n        key: 'col_2',\n        label: __('Second column'),\n        thClass: 'w-15p',\n        tdClass: 'table-col d-flex'\n      },\n    ];\n  }\n</script>\n<template>\n  <gl-table :items=\"items\" :fields=\"$options.fields\">\n    <template #head(column_one)>\n      <div>First column</div>\n      <!-- This is the column head for the first object in `fields` -->\n    </template>\n\n    <template #cell(column_one)>\n      This is the template for column data belonging to the first object\n    </template>\n  </gl-table>\n</template>\n```\n"}}},argTypes:{stacked:{options:["sm","md","lg","xl",!0,!1],control:"select"},stickyHeader:{options:[!1,!0],control:"boolean"}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components,\n  props: Object.keys(argTypes),\n  template: `\n  <gl-table\n    :sticky-header="stickyHeader"\n    :items="$options.items"\n    :fields="$options.fields"\n    :fixed="fixed"\n    :stacked="stacked"\n    :foot-clone="footClone"\n    sort-by="col_three"\n    sort-desc\n    no-sort-reset\n    sort-direction="desc"\n    hover\n    selectable\n    selected-variant="primary"\n  >\n    <template v-if="caption" #table-caption>\n      {{ caption }}\n    </template>\n  </gl-table>\n`,\n  fields: [{\n    key: \'column_one\',\n    label: \'First column\',\n    variant: \'secondary\',\n    sortable: true,\n    isRowHeader: false\n  }, {\n    key: \'col_2\',\n    label: \'Second column\',\n    formatter: value => value\n  }, {\n    key: \'col_three\',\n    sortable: true,\n    label: \'Third column\',\n    formatter: value => value,\n    thClass: \'gl-text-right\',\n    tdClass: \'gl-text-right\'\n  }],\n  items: tableItems\n})',...Default.parameters?.docs?.source}}},Empty.parameters={...Empty.parameters,docs:{...Empty.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components,\n  props: Object.keys(argTypes),\n  template: `\n      <gl-table show-empty />\n    `\n})",...Empty.parameters?.docs?.source}}},WithFilter.parameters={...WithFilter.parameters,docs:{...WithFilter.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    ...components,\n    GlFormInput\n  },\n  props: Object.keys(argTypes),\n  template: `<div class="gl-line-height-normal">\n      <gl-form-input v-model="filter" placeholder="Type to search" />\n      <br />\n      <gl-table\n              :sticky-header="stickyHeader"\n              :items="$options.items"\n              :fields="$options.fields"\n              :filter=filter\n              :fixed="fixed"\n              :stacked="stacked"\n              :foot-clone="footClone"\n              hover\n              selectable\n              selected-variant="primary"\n          />\n      </div>`,\n  items: tableItems,\n  data() {\n    return {\n      filter: null\n    };\n  }\n})',...WithFilter.parameters?.docs?.source}}},WithStickyHeader.parameters={...WithStickyHeader.parameters,docs:{...WithStickyHeader.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    ...components,\n    GlFormInput\n  },\n  props: Object.keys(argTypes),\n  template: `<div class="gl-line-height-normal">\n      <gl-form-input v-model="filter" placeholder="Type to search" />\n      <br />\n      <gl-table\n              :sticky-header="stickyHeader"\n              :items="$options.items"\n              :fields="$options.fields"\n              :filter=filter\n              :fixed="fixed"\n              :stacked="stacked"\n              :foot-clone="footClone"\n              hover\n              selectable\n              selected-variant="primary"\n          />\n      </div>`,\n  items: [...tableItems, ...tableItems, ...tableItems, ...tableItems, ...tableItems, ...tableItems, ...tableItems, ...tableItems, ...tableItems, ...tableItems],\n  data() {\n    return {\n      filter: null\n    };\n  }\n})',...WithStickyHeader.parameters?.docs?.source}}}}}]);