"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[7320],{"./src/components/utilities/friendly_wrap/friendly_wrap.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BreakWord:()=>BreakWord,Default:()=>Default,MultipleSymbols:()=>MultipleSymbols,default:()=>friendly_wrap_stories});var friendly_wrap=__webpack_require__("./src/components/utilities/friendly_wrap/friendly_wrap.vue");function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable})),t.push.apply(t,o)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}return e}function _defineProperty(obj,key,value){return(key=_toPropertyKey(key))in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _toPropertyKey(t){var i=_toPrimitive(t,"string");return"symbol"==typeof i?i:i+""}function _toPrimitive(t,r){if("object"!=typeof t||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var i=e.call(t,r||"default");if("object"!=typeof i)return i;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(t)}var components={GlFriendlyWrap:friendly_wrap.default},defaultValue=prop=>friendly_wrap.default.props[prop].default,generateProps=function(){var{text="",symbols=defaultValue("symbols")()}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{text,symbols}},makeStory=function(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(args,_ref)=>{var{argTypes}=_ref;return _objectSpread({components,props:Object.keys(argTypes)},options)}},Default=makeStory({template:'<gl-friendly-wrap :text="text" :symbols="symbols" />'});Default.args=generateProps({text:"/lorem/ipsum/dolor/sit/amet/consectetur/adipiscing/elit/Aenean/tincidunt/urna/ac/tellus/cursus/laoreet/aenean/blandit/erat/vel/est/maximus/porta/Sed/id/nunc/non/sapien/cursus/ullamcorper"});var BreakWord=makeStory({template:'<gl-friendly-wrap :text="text" :symbols="symbols" />'});BreakWord.args=generateProps({text:"LoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitamet",symbols:["dolor"]});var MultipleSymbols=makeStory({template:'<gl-friendly-wrap :text="text" :symbols="symbols" />'});MultipleSymbols.args=generateProps({text:"LoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitametLoremipsumdolorsitamet",symbols:["e","o"]});let friendly_wrap_stories={title:"utilities/friendly-wrap",component:friendly_wrap.default,parameters:{docs:{description:{component:'The friendly-wrap component lets you wrap text in a predictable way by appending [`<wbr>`] elements\nto specific break-symbols.\n\n[`<wbr>`]: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr\n\n## Internet Explorer 11\n\nIE11 doesn\'t support the `<wbr>` element: <https://caniuse.com/#search=wbr>\nTo use this component on IE11, you\'ll need some CSS to preserve its behaviour:\n\n```css\nwbr {\n  display: inline-block;\n}\n```\n\n## Usage\n\n### Default\n\nBy default, `GlFriendlyWrap` wraps text with slashes (`/`) as the break-symbol, which is especially\nuseful when displaying paths or URLs:\n\n```html\n<gl-friendly-wrap text="/some/file/path" />\n```\n\nThe code above renders to the following HTML:\n\n```html\n<span class="text-break">/<wbr>some/<wbr>file/<wbr>path</span>\n```\n\n### Custom symbols\n\nMultiple custom break-symbols can be defined via the `GlFriendlyWrap` prop:\n\n```html\n<gl-friendly-wrap\n  :symbols="[\';\', \'-\', \'.\']"\n  text="some;text-that.needs;to-be.wrapped"\n/>\n```\n\nWhich renders to:\n\n```html\n<span class="text-break">some;<wbr>text-<wbr>that.<wbr>needs;<wbr>to-<wbr>be.<wbr>wrapped</span>\n```\n\n### Break words\n\nSymbols can be words too:\n\n```html\n<gl-friendly-wrap\n  :symbols="[\'and\']"\n  text="it goes on and on and on and on"\n/>\n```\n\nWhich renders to:\n\n```html\n<span class="text-break">it goes on and<wbr> on and<wbr> on and<wbr> on</span>\n```\n'}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'makeStory({\n  template: `<gl-friendly-wrap :text="text" :symbols="symbols" />`\n})',...Default.parameters?.docs?.source}}},BreakWord.parameters={...BreakWord.parameters,docs:{...BreakWord.parameters?.docs,source:{originalSource:'makeStory({\n  template: `<gl-friendly-wrap :text="text" :symbols="symbols" />`\n})',...BreakWord.parameters?.docs?.source}}},MultipleSymbols.parameters={...MultipleSymbols.parameters,docs:{...MultipleSymbols.parameters?.docs,source:{originalSource:'makeStory({\n  template: `<gl-friendly-wrap :text="text" :symbols="symbols" />`\n})',...MultipleSymbols.parameters?.docs?.source}}}}}]);