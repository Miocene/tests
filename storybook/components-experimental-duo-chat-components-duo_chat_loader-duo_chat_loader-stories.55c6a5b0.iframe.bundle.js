"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[8411],{"./src/components/experimental/duo/chat/components/duo_chat_loader/duo_chat_loader.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>duo_chat_loader_stories});var duo_chat_loader=__webpack_require__("./src/components/experimental/duo/chat/components/duo_chat_loader/duo_chat_loader.vue"),defaultValue=prop=>duo_chat_loader.default.props[prop].default,Default=((args,_ref)=>{var{argTypes}=_ref;return{components:{GlDuoChatLoader:duo_chat_loader.default},props:Object.keys(argTypes),template:'\n    <gl-duo-chat-loader :tool-name="toolName" />\n  '}}).bind({});Default.args=function(){var{toolName=defaultValue("toolName")}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{toolName}}();let duo_chat_loader_stories={title:"experimental/duo/chat/duo_chat_loader",component:duo_chat_loader.default,parameters:{docs:{description:{component:"The Duo Chat loader. Is shown while waiting for the chat response.\n"}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlDuoChatLoader\n  },\n  props: Object.keys(argTypes),\n  template: `\n    <gl-duo-chat-loader :tool-name="toolName" />\n  `\n})',...Default.parameters?.docs?.source}}}}}]);