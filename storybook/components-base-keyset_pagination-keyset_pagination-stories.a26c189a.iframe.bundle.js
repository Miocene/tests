"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[3368],{"./src/components/base/keyset_pagination/keyset_pagination.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Events:()=>Events,default:()=>keyset_pagination_stories});var keyset_pagination=__webpack_require__("./src/components/base/keyset_pagination/keyset_pagination.vue"),generateProps=function(){var{hasPreviousPage=!1,hasNextPage=!0,startCursor="eyJpZCI6IjE3NTg1ODciLCJyZWxlYXNlZF9hdCI6IjIwMjAtMDgtMjAgMTQ6NDc6MDguNTQ1MjE1MDAwIFVUQyJ9",endCursor="eyJpZCI6IjEyNjcxNzkiLCJyZWxlYXNlZF9hdCI6IjIwMjAtMDItMTkgMjE6MDA6MDUuODU5NTQ2MDAwIFVUQyJ9",prevText,nextText,prevButtonLink="",nextButtonLink="",disabled=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{hasPreviousPage,hasNextPage,startCursor,endCursor,prevText,nextText,prevButtonLink,nextButtonLink,disabled}},Events=(args,_ref2)=>{var{argTypes}=_ref2;return{components:{GlKeysetPagination:keyset_pagination.default},props:Object.keys(argTypes),methods:{onPrev(startCursor){alert('"prev" event fired with start cursor: "'.concat(startCursor,'"'))},onNext(endCursor){alert('"next" event fired with end cursor: "'.concat(endCursor,'"'))}},template:'\n      <gl-keyset-pagination v-bind="$props" @prev="onPrev($event)" @next="onNext($event)" />\n    '}};Events.args=generateProps({hasPreviousPage:!0});var Default=((args,_ref)=>{var{argTypes}=_ref;return{components:{GlKeysetPagination:keyset_pagination.default},props:Object.keys(argTypes),template:'\n      <gl-keyset-pagination v-bind="$props"/>\n    '}}).bind({});Default.args=generateProps();let keyset_pagination_stories={title:"base/keyset-pagination",component:keyset_pagination.default,parameters:{bootstrapComponent:!1,docs:{description:{component:'Pagination is used to help users parse a large number of items on a page,\nwhenever there are too many results to show at once. Pagination breaks up\nresults into several pages with controls for navigating forward and backward, or\nto a specific page.\n\n## Usage\n\nThe simplest way to use `GlKeysetPagination` with a paginated GraphQL response\nis to `v-bind` to the\n[`PageInfo`](https://docs.gitlab.com/ee/api/graphql/reference/#pageinfo) type\nreturned by the endpoint:\n\n```html\n<gl-keyset-pagination v-bind="pageInfo" />\n```\n\nThis is possible because the default field names of the `PageInfo` type align\nwith the `props` of this component.\n\n## Dos and don\'ts\n\n**✅ Do** provide the `prevText` and `nextText` props with translatable strings.\nThe default strings ("Prev" and "Next") are hardcoded in this component and\ncan\'t be translated.\n\nExample:\n\n```html\n<gl-keyset-pagination v-bind="pageInfo" :prev-text="__(\'Prev\')" :next-text="__(\'Next\')" />\n```\n\n**✅ Do** use this component for paginating GraphQL requests<sup>1</sup> (or any\nendpoint that uses keyset pagination).\n\n**❌ Don\'t** use this component for paginating REST requests<sup>1</sup> (or any\nendpoint that uses offset pagination).\n\nFor offset pagination, use the [`GlPagination`\ncomponent](/?path=/story/base-pagination--default) instead.\n\nFor more information on the difference between offset and keyset pagination see\n[our documentation on GraphQL\npagination](https://docs.gitlab.com/ee/development/graphql_guide/pagination.html).\n\n<small><sup>1</sup>There\'s no intrinsic reason why GraphQL endpoints can\'t\nsupport offset pagination (in fact, [the official\ndocumentation](https://graphql.org/learn/pagination/#pagination-and-edges) shows\nan example offset pagination implementation) or why REST endpoints can\'t support\nkeyset pagination. This is simply how we\'ve chosen to implement our REST and\nGraphQL endpoints at GitLab.</small>\n\n## Pajamas reference\n\n<https://design.gitlab.com/components/pagination>\n'}}}};Events.parameters={...Events.parameters,docs:{...Events.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlKeysetPagination\n  },\n  props: Object.keys(argTypes),\n  methods: {\n    onPrev(startCursor) {\n      alert(`"prev" event fired with start cursor: "${startCursor}"`);\n    },\n    onNext(endCursor) {\n      alert(`"next" event fired with end cursor: "${endCursor}"`);\n    }\n  },\n  template: `\n      <gl-keyset-pagination v-bind="$props" @prev="onPrev($event)" @next="onNext($event)" />\n    `\n})',...Events.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlKeysetPagination\n  },\n  props: Object.keys(argTypes),\n  template: `\n      <gl-keyset-pagination v-bind="$props"/>\n    `\n})',...Default.parameters?.docs?.source}}}}}]);