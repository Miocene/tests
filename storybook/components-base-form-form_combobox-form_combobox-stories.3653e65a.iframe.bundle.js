"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[9796],{"./src/utils/story_decorators/container.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>makeContainer});var makeContainer=function(style){var tag=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"div";return Story=>({render:h=>h(tag,{style},[h(Story())])})}},"./src/components/base/form/form_combobox/form_combobox.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithActions:()=>WithActions,WithObjectValue:()=>WithObjectValue,default:()=>form_combobox_stories});var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),container=__webpack_require__("./src/utils/story_decorators/container.js"),constants=__webpack_require__("./src/components/base/form/form_combobox/constants.js"),form_combobox=__webpack_require__("./src/components/base/form/form_combobox/form_combobox.vue");function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg),value=info.value}catch(error){reject(error);return}info.done?resolve(value):Promise.resolve(value).then(_next,_throw)}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"next",value)}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,"throw",err)}_next(void 0)})}}var template='\n  <gl-form-combobox\n    v-model="value"\n    ref="combobox"\n    :token-list="tokenList"\n    :label-text="labelText"\n    :match-value-to-attr="matchValueToAttr"\n    :action-list="actionList"\n  />',generateProps=function(){var{tokenList=constants.stringTokenList,matchValueToAttr,actionList}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{tokenList,labelText:constants.labelText,matchValueToAttr,actionList}},Default=(args=>({components:{GlFormCombobox:form_combobox.default},data:()=>({value:""}),props:Object.keys(args),template})).bind({});Default.args=generateProps();var WithObjectValue=(args,_ref)=>{var{argTypes}=_ref;return{components:{GlFormCombobox:form_combobox.default},props:Object.keys(argTypes),data:()=>({value:""}),template:'\n    <gl-form-combobox\n      v-model="value"\n      ref="combobox"\n      :token-list="tokenList"\n      :label-text="labelText"\n      :match-value-to-attr="matchValueToAttr"\n    >\n      <template #result="{ item }">\n        <div class="gl-display-flex">\n          <div class="gl-text-gray-400 gl-mr-4">{{ item.id }}</div>\n          <div>{{ item.title }}</div>\n        </div>\n      </template>\n    </gl-form-combobox>\n  '}};WithObjectValue.args=generateProps({tokenList:constants.objectTokenList,matchValueToAttr:"title"}),WithObjectValue.decorators=[(0,container.F)({height:"370px"})],WithObjectValue.play=function(){var _ref3=_asyncToGenerator(function*(_ref2){var{canvasElement}=_ref2,searchbox=(0,dist.uh)(canvasElement).getByRole("searchbox");dist.mV.type(searchbox,"g"),yield(0,dist.X_)(()=>(0,dist.l_)((0,dist.uh)(document).getByRole("menuitem",{name:"1 giraffe"})).toBeVisible())});return function(_x){return _ref3.apply(this,arguments)}}();var WithActions=(args,_ref4)=>{var{argTypes}=_ref4;return{components:{GlFormCombobox:form_combobox.default},props:Object.keys(argTypes),template,data:()=>({value:""})}};WithActions.args=generateProps({tokenList:constants.stringTokenList,actionList:constants.actionsList}),WithActions.decorators=[(0,container.F)({height:"180px"})],WithActions.play=function(){var _ref6=_asyncToGenerator(function*(_ref5){var{canvasElement}=_ref5,searchbox=(0,dist.uh)(canvasElement).getByRole("searchbox");dist.mV.type(searchbox,"dog"),yield(0,dist.X_)(()=>(0,dist.l_)((0,dist.uh)(document).getByRole("menuitem",{name:"dog"})).toBeVisible())});return function(_x2){return _ref6.apply(this,arguments)}}();let form_combobox_stories={title:"base/form/form-combobox",component:form_combobox.default,parameters:{docs:{description:{component:'Use this component to add a [`FormInput`](/?path=/story/base-form-form-input--default) component\nwith synchronous autocomplete dropdown. It behaves as follows:\n\n- Typing matches tokens; dropdown disappears when there is no match  \n- Up and down arrows navigate the dropdown  \n- Enter selects keyboard-highlighted item; clicking overrides this  \n- Esc closes dropdown when it is open, clears field when it is not  \n- Browser/native autocomplete dropdown hidden when ours is open, shows when it is not  \n- Tab selects current entered text and moves to next field  \n\nThis behavior based on\n[this w3c pattern](https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html)\nand [this accessible combobox example](https://alligator.io/vuejs/vue-a11y-autocomplete/).\n\n## Usage\n\nThe combobox accepts an array of string tokens, a `v-model`, and label text. Internally, it generates\nunique element IDs so multiple can be used on one page without clashing.\n\nOn selection it sets the input value to the selected string and emits a `value-selected` event for\nconsumption by parent components.\n\n```html\n<gl-form-combobox\n  v-model="inputVal"\n  :token-list="tokens"\n  label-text="Combobox Label"\n/>\n```\n\nIt does not have a loading state nor does it accept tokens other than strings. It allows for one\nselected value.\n\n### What if I need to load the options asynchronously?\n\nYou may want to look at [`GlSearchBoxByType`] or [`GlSearchBoxByClick`].\n\n### What if I need multiple options?\n\nThe [`GlTokenSelector`] may be what you need. Alternately, [`GlFilteredSearch`] will let you search\nand include tokens.\n\n## Edge cases\n\nThe algorithm to match tokens with the input is very naive. If you need to use the component with a\nvery large list of matches, you may want to update the implementation or use one of the search\ninputs, like [`GlSearchBoxByType`], [`GlSearchBoxByClick`], or [`GlFilteredSearch`].\n\n[`GlSearchBoxByType`]: https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-search-box-by-type--default\n[`GlSearchBoxByClick`]: https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-search-box-by-click--default\n[`GlTokenSelector`]: https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-token-selector--default\n[`GlFilteredSearch`]: https://gitlab-org.gitlab.io/gitlab-ui/?path=/story/base-filtered-search--default\n'}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormCombobox\n  },\n  data: () => {\n    return {\n      value: ''\n    };\n  },\n  props: Object.keys(args),\n  template\n})",...Default.parameters?.docs?.source}}},WithObjectValue.parameters={...WithObjectValue.parameters,docs:{...WithObjectValue.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlFormCombobox\n  },\n  props: Object.keys(argTypes),\n  data: () => {\n    return {\n      value: \'\'\n    };\n  },\n  template: `\n    <gl-form-combobox\n      v-model="value"\n      ref="combobox"\n      :token-list="tokenList"\n      :label-text="labelText"\n      :match-value-to-attr="matchValueToAttr"\n    >\n      <template #result="{ item }">\n        <div class="gl-display-flex">\n          <div class="gl-text-gray-400 gl-mr-4">{{ item.id }}</div>\n          <div>{{ item.title }}</div>\n        </div>\n      </template>\n    </gl-form-combobox>\n  `\n})',...WithObjectValue.parameters?.docs?.source}}},WithActions.parameters={...WithActions.parameters,docs:{...WithActions.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlFormCombobox\n  },\n  props: Object.keys(argTypes),\n  template,\n  data: () => {\n    return {\n      value: ''\n    };\n  }\n})",...WithActions.parameters?.docs?.source}}}}}]);