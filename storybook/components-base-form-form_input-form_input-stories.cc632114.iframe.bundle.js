"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[6248],{"./src/components/base/form/form_input/form_input.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,NumberInput:()=>NumberInput,Readonly:()=>Readonly,ResponsiveWidths:()=>ResponsiveWidths,Widths:()=>Widths,default:()=>form_input_stories});var constants=__webpack_require__("./src/utils/constants.js"),form_group=__webpack_require__("./src/components/base/form/form_group/form_group.vue"),form_input=__webpack_require__("./src/components/base/form/form_input/form_input.vue"),generateProps=function(){var{inputId="input-id",width=form_input.default.props.width.default,value="",disabled=!1,readonly=!1,labelText="Label",type="text"}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{labelText,inputId,width,value,disabled,readonly,type}},Template=args=>({components:{GlFormInput:form_input.default,GlFormGroup:form_group.default},props:Object.keys(args),template:'\n<gl-form-group :label="labelText" :label-for="inputId">\n  <gl-form-input\n    :id="inputId"\n    type="text"\n    :readonly="readonly"\n    :disabled="disabled"\n    :value="value"\n    :width="width"\n  />\n</gl-form-group>'}),Default=Template.bind({});Default.args=generateProps({value:"some text",labelText:"Default"});var Disabled=Template.bind({});Disabled.args=generateProps({value:"some text",disabled:!0,labelText:"Disabled"});var Readonly=Template.bind({});Readonly.args=generateProps({value:"readonly text",readonly:!0,labelText:"Readonly"});var NumberInput=Template.bind({});NumberInput.args=generateProps({value:"42",labelText:"Number input",type:"number"}),NumberInput.tags=["skip-visual-test"];var Widths=(args,_ref)=>{var{argTypes}=_ref;return{components:{GlFormInput:form_input.default,GlFormGroup:form_group.default},props:Object.keys(argTypes),data:()=>({formInputWidths:constants.bK}),template:'\n  <div>\n    <gl-form-group v-for="(width, name) in formInputWidths" :key="width" :label="name" :label-for="\'width-\' + width">\n      <gl-form-input\n          :id="\'width-\' + width"\n          :value="name"\n          :width="width"\n          class="gl-mb-4"\n      />\n    </gl-form-group>\n  </div>'}};Widths.args={};var ResponsiveWidths=(args,_ref2)=>{var{argTypes}=_ref2;return{components:{GlFormInput:form_input.default,GlFormGroup:form_group.default},props:Object.keys(argTypes),template:'\n      <div>\n        <gl-form-group label="Default" label-for="responsive-widths-1">\n          <gl-form-input\n            id="responsive-widths-1"\n            :width="{ default: \'md\', md: \'lg\', lg: \'xl\' }"\n            value="With `default` key"\n            class="gl-mb-4"\n          />\n        </gl-form-group>\n\n        <gl-form-group label="Without default" label-for="responsive-widths-2">\n          <gl-form-input\n            id="responsive-widths-2"\n            :width="{ md: \'lg\', lg: \'xl\' }"\n            value="Without `default` key"\n          />\n        </gl-form-group>\n      </div>'}};ResponsiveWidths.args={};let form_input_stories={title:"base/form/form-input",component:form_input.default,parameters:{bootstrapComponent:"b-form-input",docs:{description:{component:"General user input to be used in forms.\n"}}},argTypes:{width:{options:constants.bK,control:"select"}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormInput,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  template\n})",...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormInput,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  template\n})",...Disabled.parameters?.docs?.source}}},Readonly.parameters={...Readonly.parameters,docs:{...Readonly.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormInput,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  template\n})",...Readonly.parameters?.docs?.source}}},NumberInput.parameters={...NumberInput.parameters,docs:{...NumberInput.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormInput,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  template\n})",...NumberInput.parameters?.docs?.source}}},Widths.parameters={...Widths.parameters,docs:{...Widths.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlFormInput,\n    GlFormGroup\n  },\n  props: Object.keys(argTypes),\n  data: () => ({\n    formInputWidths\n  }),\n  template: `\n  <div>\n    <gl-form-group v-for="(width, name) in formInputWidths" :key="width" :label="name" :label-for="\'width-\' + width">\n      <gl-form-input\n          :id="\'width-\' + width"\n          :value="name"\n          :width="width"\n          class="gl-mb-4"\n      />\n    </gl-form-group>\n  </div>`\n})',...Widths.parameters?.docs?.source}}},ResponsiveWidths.parameters={...ResponsiveWidths.parameters,docs:{...ResponsiveWidths.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlFormInput,\n    GlFormGroup\n  },\n  props: Object.keys(argTypes),\n  template: `\n      <div>\n        <gl-form-group label="Default" label-for="responsive-widths-1">\n          <gl-form-input\n            id="responsive-widths-1"\n            :width="{ default: \'md\', md: \'lg\', lg: \'xl\' }"\n            value="With \\`default\\` key"\n            class="gl-mb-4"\n          />\n        </gl-form-group>\n\n        <gl-form-group label="Without default" label-for="responsive-widths-2">\n          <gl-form-input\n            id="responsive-widths-2"\n            :width="{ md: \'lg\', lg: \'xl\' }"\n            value="Without \\`default\\` key"\n          />\n        </gl-form-group>\n      </div>`\n})',...ResponsiveWidths.parameters?.docs?.source}}}}}]);