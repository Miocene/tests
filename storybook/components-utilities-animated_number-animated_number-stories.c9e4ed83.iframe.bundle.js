"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[3193],{"./src/components/utilities/animated_number/animated_number.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,InitialAnimate:()=>InitialAnimate,default:()=>animated_number_stories});var animated_number=__webpack_require__("./src/components/utilities/animated_number/animated_number.vue"),defaultValue=prop=>animated_number.default.props[prop].default,generateProps=function(){var{initialNumber=100,decimalPlaces=defaultValue("decimalPlaces"),useDelimiters=!1,duration=1e3,animateOnMount=defaultValue("animateOnMount")}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{initialNumber,decimalPlaces,useDelimiters,duration,animateOnMount}},Template=(args,_ref)=>{var{argTypes}=_ref;return{components:{GlAnimatedNumber:animated_number.default},props:Object.keys(argTypes),template:'\n  <div>\n    <gl-animated-number :number="updatedNumber" :decimalPlaces="decimalPlaces" :use-delimiters="useDelimiters" :duration="duration" :animateOnMount="animateOnMount"/>\n    <button @click="updateNumber">Update number</button>\n  </div>\n',data(){return{updatedNumber:this.initialNumber}},methods:{updateNumber(){this.updatedNumber=Math.floor(100*Math.random())}}}},InitialAnimate=Template.bind({});InitialAnimate.args=generateProps({animateOnMount:!0});var Default=Template.bind({});Default.args=generateProps();let animated_number_stories={title:"utilities/animated-number",component:animated_number.default,parameters:{docs:{description:{component:"Animated numbers provide a signifier that values are being changed.\n\n## Usage\n\nThe animated number component can be used with or without decimal places. Decimal places will\nnot be rounded if chosen to be omitted.\n"}}},argTypes:{},tags:["skip-visual-test"]};InitialAnimate.parameters={...InitialAnimate.parameters,docs:{...InitialAnimate.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlAnimatedNumber\n  },\n  props: Object.keys(argTypes),\n  template,\n  data() {\n    return {\n      updatedNumber: this.initialNumber\n    };\n  },\n  methods: {\n    updateNumber() {\n      this.updatedNumber = Math.floor(Math.random() * 100);\n    }\n  }\n})",...InitialAnimate.parameters?.docs?.source}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlAnimatedNumber\n  },\n  props: Object.keys(argTypes),\n  template,\n  data() {\n    return {\n      updatedNumber: this.initialNumber\n    };\n  },\n  methods: {\n    updateNumber() {\n      this.updatedNumber = Math.floor(Math.random() * 100);\n    }\n  }\n})",...Default.parameters?.docs?.source}}}}}]);