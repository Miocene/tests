"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[4995],{"./src/directives/safe_html/safe_html.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>safe_html_stories});var purify=__webpack_require__("./node_modules/dompurify/dist/purify.js"),purify_default=__webpack_require__.n(purify),safe_html=__webpack_require__("./src/directives/safe_html/safe_html.js"),{sanitize}=purify_default(),Default=(_args,_ref)=>{var{argTypes}=_ref;return{directives:{SafeHtml:safe_html.SafeHtmlDirective},props:Object.keys(argTypes),computed:{sanitizedHtml(){return sanitize(this.unsafeHTML)}},template:'\n  <table class="gl-table">\n    <thead>\n      <tr>\n        <th>Directive</th>\n        <th>Output</th>\n        <th>Rendered</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><strong>v-html</strong></td>\n        <td><code>{{ unsafeHTML }}</code></td>\n        <td>N/A for security reasons</td>\n      </tr>\n      <tr>\n        <td><strong>v-safe-html</strong></td>\n        <td><code>{{ sanitizedHtml }}</code></td>\n        <td v-safe-html="unsafeHTML"></td>\n      </tr>\n    </tbody>\n  </table>\n  '}};Default.args=function(){var{unsafeHTML='<a href="javascript:alert(document.domain)">Click me</a>'}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{unsafeHTML}}();let safe_html_stories={title:"directives/safe-html-directive",component:safe_html.SafeHtmlDirective,tags:["skip-visual-test"],parameters:{docs:{description:{component:"A Vue Directive to sanitize HTML to avoid any XSS vulnerabilities.\n\n## Usage\n\nThis directive can be used to sanitize HTML code which may contain user input, to prevent cross-site\nscripting (XSS) vulnerabilities.\n\nUnder the hood, it uses [DOMPurify](https://github.com/cure53/DOMPurify) to sanitize the provided HTML.\n\nDOMPurify will strip out dangerous HTML and will keep the safe HTML. You can refer complete list of\n[tags][1] and [attributes][2] allowed by DOMPurify.\n\n[1]: https://github.com/cure53/DOMPurify/blob/main/src/tags.js\n[2]: https://github.com/cure53/DOMPurify/blob/main/src/attrs.js\n\n## Example\n\n```html\n<script>\nimport { GlSafeHtmlDirective as SafeHtml } from '@gitlab/ui';\n\nexport default {\n  directives: {\n    SafeHtml,\n  },\n  data() {\n    return {\n      rawHtml: \"Hello! <script>alert('XSS')</script>\",\n    };\n  },\n};\n</script>\n\n<template>\n  <div v-safe-html=\"rawHtml\"></div>\n</template>\n```\n\n## Advanced configuration\n\n```js\n// It allows only <b> tags\nconst config = { ALLOWED_TAGS: ['b'] };\n\n// It doesn't allow any html tags\nconst config = { ALLOWED_TAGS: [] };\n```\n\n```html\n<div v-safe-html:[config]=\"rawHtml\"></div>\n```\n\nFor advanced configuration options, please refer to [DOMPurify's documentation](https://github.com/cure53/DOMPurify#can-i-configure-dompurify).\n\n### Notes\n\n1. `target` attribute is not allowed by default - See <https://gitlab.com/gitlab-org/gitlab-ui/-/issues/1427>.\n1. To know more about other tips & caveats - See <https://gitlab.com/groups/gitlab-org/-/epics/4273#caveats>.\n"}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'(_args, {\n  argTypes\n}) => ({\n  directives: {\n    SafeHtml\n  },\n  props: Object.keys(argTypes),\n  computed: {\n    sanitizedHtml() {\n      return sanitize(this.unsafeHTML);\n    }\n  },\n  template: `\n  <table class="gl-table">\n    <thead>\n      <tr>\n        <th>Directive</th>\n        <th>Output</th>\n        <th>Rendered</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><strong>v-html</strong></td>\n        <td><code>{{ unsafeHTML }}</code></td>\n        <td>N/A for security reasons</td>\n      </tr>\n      <tr>\n        <td><strong>v-safe-html</strong></td>\n        <td><code>{{ sanitizedHtml }}</code></td>\n        <td v-safe-html="unsafeHTML"></td>\n      </tr>\n    </tbody>\n  </table>\n  `\n})',...Default.parameters?.docs?.source}}}}}]);