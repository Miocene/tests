"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[2859],{"./src/components/base/form/form_select/form_select.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,InvalidState:()=>InvalidState,ValidState:()=>ValidState,Widths:()=>Widths,WithTruncation:()=>WithTruncation,default:()=>form_select_stories});var uniqueId=__webpack_require__("./node_modules/lodash/uniqueId.js"),uniqueId_default=__webpack_require__.n(uniqueId),constants=__webpack_require__("./src/utils/constants.js"),form_group=__webpack_require__("./src/components/base/form/form_group/form_group.vue"),form_select_constants=__webpack_require__("./src/components/base/form/form_select/constants.js"),form_select=__webpack_require__("./src/components/base/form/form_select/form_select.vue"),data=()=>({selected:"Pizza"}),template='\n<gl-form-group :label="labelText" :label-for="inputId">\n  <gl-form-select\n    :id="inputId"\n    v-model="selected"\n    :width="width"\n    :disabled="disabled"\n    :state="state"\n    :multiple="multiple"\n    :selectSize="selectSize"\n    :options="options">\n  </gl-form-select>\n</gl-form-group>\n',generateProps=function(){var{inputId=uniqueId_default()("input-"),labelText="Label",width=null,state=null,disabled=!1,multiple=!1,selectSize=1,options=form_select_constants.formSelectOptions}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{inputId,labelText,width,disabled,state,multiple,selectSize,options}},Template=args=>({components:{GlFormSelect:form_select.default,GlFormGroup:form_group.default},props:Object.keys(args),data,template}),Default=Template.bind({});Default.args=generateProps();var Disabled=Template.bind({});Disabled.args=generateProps({disabled:!0});var ValidState=Template.bind({});ValidState.args=generateProps({state:!0});var InvalidState=Template.bind({});InvalidState.args=generateProps({state:!1});var WithTruncation=(args,_ref)=>{var{argTypes}=_ref;return{components:{GlFormSelect:form_select.default,GlFormGroup:form_group.default},props:Object.keys(argTypes),data:()=>({selected:1}),template:'\n    <div style="max-width: 300px;">\n      '.concat(template,"\n    </div>\n    ")}};WithTruncation.args=generateProps({options:[{value:1,text:"A form select option with a very looooooooong label"}]});var Widths=(args,_ref2)=>{var{argTypes}=_ref2;return{components:{GlFormSelect:form_select.default,GlFormGroup:form_group.default},props:Object.keys(argTypes),data:()=>({formInputWidths:constants.bK}),template:'\n      <div>\n        <gl-form-group v-for="(width, name) in formInputWidths" :key="width" :label="name" :label-for="\'width-\' + width">\n          <gl-form-select\n            :id="\'width-\' + width"\n            v-model="name"\n            :width="width"\n            :options="[{ value: name, text: name }]">\n          </gl-form-select>\n        </gl-form-group>\n      </div>'}};Widths.args=generateProps();let form_select_stories={title:"base/form/form-select",component:form_select.default,parameters:{bootstrapComponent:"b-form-select",docs:{description:{component:"Form select component used to select from group of options in a form.\n"}}},argTypes:{width:{options:constants.bK,control:"select"},state:{options:constants.WO,control:"select"},input:{description:"Emitted with the select value changes.",table:{category:"events"}},change:{description:"Emitted with the select value changes via user interaction.",table:{category:"events"}},first:{description:"Slot to place option tags above options provided via options prop.",table:{category:"slots"}},default:{description:"Slot to place explicit option tags.",table:{category:"slots"}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormSelect,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  data,\n  template\n})",...Default.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormSelect,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  data,\n  template\n})",...Disabled.parameters?.docs?.source}}},ValidState.parameters={...ValidState.parameters,docs:{...ValidState.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormSelect,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  data,\n  template\n})",...ValidState.parameters?.docs?.source}}},InvalidState.parameters={...InvalidState.parameters,docs:{...InvalidState.parameters?.docs,source:{originalSource:"args => ({\n  components: {\n    GlFormSelect,\n    GlFormGroup\n  },\n  props: Object.keys(args),\n  data,\n  template\n})",...InvalidState.parameters?.docs?.source}}},WithTruncation.parameters={...WithTruncation.parameters,docs:{...WithTruncation.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlFormSelect,\n    GlFormGroup\n  },\n  props: Object.keys(argTypes),\n  data() {\n    return {\n      selected: 1\n    };\n  },\n  template: `\n    <div style="max-width: 300px;">\n      ${template}\n    </div>\n    `\n})',...WithTruncation.parameters?.docs?.source}}},Widths.parameters={...Widths.parameters,docs:{...Widths.parameters?.docs,source:{originalSource:'(args, {\n  argTypes\n}) => ({\n  components: {\n    GlFormSelect,\n    GlFormGroup\n  },\n  props: Object.keys(argTypes),\n  data() {\n    return {\n      formInputWidths\n    };\n  },\n  template: `\n      <div>\n        <gl-form-group v-for="(width, name) in formInputWidths" :key="width" :label="name" :label-for="\'width-\' + width">\n          <gl-form-select\n            :id="\'width-\' + width"\n            v-model="name"\n            :width="width"\n            :options="[{ value: name, text: name }]">\n          </gl-form-select>\n        </gl-form-group>\n      </div>`\n})',...Widths.parameters?.docs?.source}}}}}]);