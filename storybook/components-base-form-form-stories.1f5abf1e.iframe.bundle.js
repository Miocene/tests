"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[7489],{"./src/components/base/form/form.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,default:()=>form_stories});var button_button=__webpack_require__("./src/components/base/button/button.vue"),test_utils=__webpack_require__("./src/utils/test_utils.js"),form_checkbox_group=__webpack_require__("./src/components/base/form/form_checkbox/form_checkbox_group.vue"),form_form=__webpack_require__("./src/components/base/form/form.vue"),form_group=__webpack_require__("./src/components/base/form/form_group/form_group.vue"),form_input=__webpack_require__("./src/components/base/form/form_input/form_input.vue"),form_select=__webpack_require__("./src/components/base/form/form_select/form_select.vue"),form_checkbox=__webpack_require__("./src/components/base/form/form_checkbox/form_checkbox.vue"),Default=args=>({components:{GlForm:form_form.default,GlFormGroup:form_group.default,GlFormInput:form_input.default,GlFormSelect:form_select.default,GlFormCheckbox:form_checkbox.default,GlFormCheckboxGroup:form_checkbox_group.default,GlButton:button_button.default},props:Object.keys(args),data:()=>({form:{submitDisabled:!1,email:"",name:"",mergeState:null,checked:[]},states:[{text:"Select One",value:null},"Open","Resolved","Closed","Blocked"],show:!0}),methods:{onReset(){this.form.name="",this.form.submitDisabled=!1},onSubmit(evt){evt.preventDefault(),this.form.submitDisabled=!0,(0,test_utils.$L)(()=>{this.form.submitDisabled=!1,alert(JSON.stringify(this.form))},1e3)}},template:'\n    <gl-form @submit="onSubmit" @reset="onReset">\n      <gl-form-group\n        id="input-group-1"\n        label="Email address:"\n        label-for="input-1"\n        description="We\'ll never share your email with anyone else."\n      >\n        <gl-form-input\n          id="input-1"\n          v-model="form.email"\n          type="email"\n          required\n          placeholder="Enter email"\n        />\n      </gl-form-group>\n\n      <gl-form-group id="input-group-2" label="Your Name:" label-for="input-2">\n        <gl-form-input id="input-2" v-model="form.name" required placeholder="Enter name" />\n      </gl-form-group>\n\n      <gl-form-group id="input-group-3" label="Merge State:" label-for="input-3">\n        <gl-form-select id="input-3" v-model="form.mergeState" :options="states" required />\n      </gl-form-group>\n\n      <gl-form-group id="input-group-4">\n        <gl-form-checkbox-group id="checkboxes-4" v-model="form.checked">\n          <gl-form-checkbox value="squash">Squash Commits</gl-form-checkbox>\n          <gl-form-checkbox value="new">Create New Issue</gl-form-checkbox>\n        </gl-form-checkbox-group>\n      </gl-form-group>\n\n      <div class="gl-display-flex gl-justify-content-end">\n        <gl-button type="reset" class="gl-mr-3">Cancel</gl-button>\n        <gl-button type="submit" variant="confirm">Submit</gl-button>\n      </div>\n    </gl-form>\n  '});let form_stories={title:"base/form/form",component:form_form.default,parameters:{bootstrapComponent:"b-form",docs:{description:{component:"A wrapper element for `gl-form-*` input elements. Supports `@submit` and `@reset` events, as well as\ncontrolling validation settings for form inputs.\n"}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => ({\n  components: {\n    GlForm,\n    GlFormGroup,\n    GlFormInput,\n    GlFormSelect,\n    GlFormCheckbox,\n    GlFormCheckboxGroup,\n    GlButton\n  },\n  props: Object.keys(args),\n  data() {\n    return {\n      form: {\n        submitDisabled: false,\n        email: \'\',\n        name: \'\',\n        mergeState: null,\n        checked: []\n      },\n      states: [{\n        text: \'Select One\',\n        value: null\n      }, \'Open\', \'Resolved\', \'Closed\', \'Blocked\'],\n      show: true\n    };\n  },\n  methods: {\n    onReset() {\n      this.form.name = \'\';\n      this.form.submitDisabled = false;\n    },\n    onSubmit(evt) {\n      evt.preventDefault();\n      this.form.submitDisabled = true;\n      setStoryTimeout(() => {\n        this.form.submitDisabled = false;\n        // eslint-disable-next-line no-alert\n        alert(JSON.stringify(this.form));\n      }, 1000);\n    }\n  },\n  template: `\n    <gl-form @submit="onSubmit" @reset="onReset">\n      <gl-form-group\n        id="input-group-1"\n        label="Email address:"\n        label-for="input-1"\n        description="We\'ll never share your email with anyone else."\n      >\n        <gl-form-input\n          id="input-1"\n          v-model="form.email"\n          type="email"\n          required\n          placeholder="Enter email"\n        />\n      </gl-form-group>\n\n      <gl-form-group id="input-group-2" label="Your Name:" label-for="input-2">\n        <gl-form-input id="input-2" v-model="form.name" required placeholder="Enter name" />\n      </gl-form-group>\n\n      <gl-form-group id="input-group-3" label="Merge State:" label-for="input-3">\n        <gl-form-select id="input-3" v-model="form.mergeState" :options="states" required />\n      </gl-form-group>\n\n      <gl-form-group id="input-group-4">\n        <gl-form-checkbox-group id="checkboxes-4" v-model="form.checked">\n          <gl-form-checkbox value="squash">Squash Commits</gl-form-checkbox>\n          <gl-form-checkbox value="new">Create New Issue</gl-form-checkbox>\n        </gl-form-checkbox-group>\n      </gl-form-group>\n\n      <div class="gl-display-flex gl-justify-content-end">\n        <gl-button type="reset" class="gl-mr-3">Cancel</gl-button>\n        <gl-button type="submit" variant="confirm">Submit</gl-button>\n      </div>\n    </gl-form>\n  `\n})',...Default.parameters?.docs?.source}}}}}]);