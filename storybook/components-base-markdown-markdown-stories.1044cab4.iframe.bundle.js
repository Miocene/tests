"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[917],{"./src/components/base/markdown/markdown.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Compact:()=>Compact,Documentation:()=>Documentation,default:()=>markdown_stories});var markdown=__webpack_require__("./src/components/base/markdown/markdown.vue"),template='\n  <gl-markdown :compact="compact">'.concat('<h1>MD Doc h1 • GitLab uses "GitLab Flavored Markdown" (GFM)</h1>\n<p>\n  MD Doc Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard Markdown\n  in a few significant ways to add some useful functionality. You can use GFM in the following\n  areas: comments, issues, merge requests, milestones, snippets and more.\n</p>\n<p class="sm">\n  MD Doc Small Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard\n  Markdown in a few significant ways to add some useful functionality. You can use GFM in the\n  following areas: comments, issues, merge requests, milestones, snippets and more.\n</p>\n<p class="monospace">UI Monospace</p>\n<p class="monospace sm">UI Small Monospace</p>\n<h2>MD Doc h2 • GitLab uses "GitLab Flavored Markdown" (GFM)</h2>\n<p>\n  MD Doc Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard Markdown\n  in a few significant ways to add some useful functionality. You can use GFM in the following\n  areas: comments, issues, merge requests, milestones, snippets and more.\n</p>\n<h3>MD Doc h3 • GitLab uses "GitLab Flavored Markdown" (GFM)</h3>\n<p>\n  MD Doc Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard Markdown\n  in a few significant ways to add some useful functionality. You can use GFM in the following\n  areas: comments, issues, merge requests, milestones, snippets and more.\n</p>\n<h4>MD Doc h4 • GitLab uses "GitLab Flavored Markdown" (GFM)</h4>\n<p>\n  MD Doc Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard Markdown\n  in a few significant ways to add some useful functionality. You can use GFM in the following\n  areas: comments, issues, merge requests, milestones, snippets and more.\n</p>\n<h5>MD Doc h5 • GitLab uses "GitLab Flavored Markdown" (GFM)</h5>\n<p>\n  MD Doc Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard Markdown\n  in a few significant ways to add some useful functionality. You can use GFM in the following\n  areas: comments, issues, merge requests, milestones, snippets and more.\n</p>\n<h6>MD Doc h6 • GitLab uses "GitLab Flavored Markdown" (GFM)</h6>\n<p>\n  MD Doc Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard Markdown\n  in a few significant ways to add some useful functionality. You can use GFM in the following\n  areas: comments, issues, merge requests, milestones, snippets and more.\n</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Widget</th>\n      <th>Wording</th>\n      <th>Proposed</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Test summary</td>\n      <td>Test summary contained 3 failed, 1 fixed test result out of 15 total tests</td>\n      <td>\n        This is the only one that doesn\'t include the breakdown in the Level 1 subtext. Does it need\n        to be updated?\n      </td>\n    </tr>\n    <tr>\n      <td>Browser performance</td>\n      <td>Browser performance test metrics: 7 changes</td>\n      <td>Browser performance test metrics detected 7 changes</td>\n    </tr>\n    <tr>\n      <td>Load performance</td>\n      <td>Load performance test metrics detected 4 changes</td>\n      <td>✅</td>\n    </tr>\n  </tbody>\n</table>\n\n<blockquote>\n  <p>\n    MD Doc Blockquote • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard\n    Markdown in a few significant ways to add some useful functionality. You can use GFM in the\n    following areas: comments, issues, merge requests, milestones, snippets and more.\n  </p>\n</blockquote>\n<blockquote>\n  <ul>\n    <li>Blockquote list item 1</li>\n    <li>Blockquote list item 2</li>\n  </ul>\n</blockquote>\n<blockquote>\n  <table>\n    <thead>\n      <tr>\n        <th>header</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>cell</td>\n      </tr>\n    </tbody>\n  </table>\n</blockquote>\n<blockquote>\n  <blockquote>\n    <p>Nested blockquote</p>\n  </blockquote>\n</blockquote>\n<p>\n  This is a paragraph with two types inline diff <span class="idiff addition">addition</span> and\n  <span class="idiff deletion">deletion</span>\n</p>\n<p>This block implements the "GitLab Flavored Markdown" <code>Code span</code> styles.</p>\n\n<p>\n  This is an audio file\n  <span class="media-container audio-container">\n    <audio\n      src="file.mp3"\n      controls="true"\n      data-setup="{}"\n      data-title="file.mp3"\n      data-canonical-src="file.mp3"\n      class="gfm"\n    ></audio>\n    <a\n      href="file.mp3"\n      target="_blank"\n      rel="noopener noreferrer"\n      title="Download file.mp3"\n      data-canonical-src="file.mp3"\n      data-link="true"\n      class="gfm"\n      >file.mp3</a\n    >\n  </span>\n</p>\n<p>Code block</p>\n<pre class="code"><code>pre {\n  @include gl-py-4;\n  @include gl-px-6;\n\n  code {\n    @include gl-bg-white;\n    @include gl-rounded-0;\n    @include gl-text-gray-900;\n    @include gl-px-0;\n    @include gl-py-0;\n  }\n}\n</code></pre>\n<p>Code block with long lines scrolls horizontally</p>\n<pre\n  class="code"\n><code>MD Doc Small Paragraph • GitLab uses "GitLab Flavored Markdown" (GFM). It extends the standard Markdown in a few\nsignificant ways to add some useful functionality. You can use GFM in the following areas: comments, issues, merge requests, milestones, snippets and more.\n</code></pre>\n',"</gl-markdown>\n  "),generateProps=function(){var{compact=!1}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{compact}},Template=(args,_ref)=>{var{argTypes}=_ref;return{components:{GlMarkdown:markdown.default},props:Object.keys(argTypes),template}},Documentation=Template.bind({});Documentation.args=generateProps();var Compact=Template.bind({});Compact.args=generateProps({compact:!0});let markdown_stories={title:"base/markdown",component:markdown.default,parameters:{docs:{description:{component:'The `GlMarkdown` component styles markdown-generated HTML following the Pajamas Documentation Markdown\n[styling specifications](https://www.figma.com/file/qEddyqCrI7kPSBjGmwkZzQ/Pajamas-UI-Kit---Beta?node-id=542%3A2).\n\n## Usage\n\nYou can use the `GlMarkdown` component in two ways.\n\n### Vue component\n\n```html\n<script>\nimport { GlMarkdown } from \'@gitlab/ui\';\n\nexport default {\n  components: {\n    GlMarkdown,\n  }\n}\n</script>\n<template>\n  <gl-markdown>\n    <!-- All the content inside gl-markdown will inherit the documentation markdown styles -->\n  </gl-markdown>\n</template>\n```\n\n### `gl-markdown` class selector\n\nFollow the [GitLab UI CSS guidelines](https://gitlab.com/gitlab-org/gitlab-ui/-/blob/main/doc/css.md)\nto include GitLab UI CSS in your application. Afterwards, you can apply the `gl-markdown` class\nselector to the root element that contains the markdown-generated HTML.\n\n```html\n<body class="gl-markdown">\n  <!-- All the content inside body.gl-markdown will inherit the documentation markdown styles -->\n</body>\n```\n\n### Compact markdown\n\nSet the `compact` property to true in `GlMarkdown` to apply the compact markdown styles.\n\n```html\n<gl-markdown compact></gl-compact>\n```\n\nYou can also append the `gl-compact-markdown` class selector after `gl-markdown` in markdown-generated\nHTML.\n\n```html\n<body class="gl-markdown gl-compact-markdown">\n</body>\n```\n\n<!--\n## Browser compatibility\n\nIf the component requires any polyfill or fallback on certain browsers, describe those requirements\nhere.\n-->\n\n<!--\n## Edge cases\n\nIf the component has some known limitations, describe them here.\n-->\n\n<!--\n## Deprecation warning\n\nIf and when this component introduced API changes that would require deprecating old APIs, describe\nthe changes here, and provide a migration paths to the new API.\n-->\n'}}}};Documentation.parameters={...Documentation.parameters,docs:{...Documentation.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlMarkdown\n  },\n  props: Object.keys(argTypes),\n  template\n})",...Documentation.parameters?.docs?.source}}},Compact.parameters={...Compact.parameters,docs:{...Compact.parameters?.docs,source:{originalSource:"(args, {\n  argTypes\n}) => ({\n  components: {\n    GlMarkdown\n  },\n  props: Object.keys(argTypes),\n  template\n})",...Compact.parameters?.docs?.source}}}}}]);