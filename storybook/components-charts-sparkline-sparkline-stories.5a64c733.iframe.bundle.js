"use strict";(globalThis.webpackChunk_gitlab_ui=globalThis.webpackChunk_gitlab_ui||[]).push([[6542],{"./src/utils/story_decorators/container.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{F:()=>makeContainer});var makeContainer=function(style){var tag=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"div";return Story=>({render:h=>h(tag,{style},[h(Story())])})}},"./src/components/charts/sparkline/sparkline.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoHeight:()=>AutoHeight,Default:()=>Default,WithChartColorGradient:()=>WithChartColorGradient,WithSmoothing:()=>WithSmoothing,WithoutLastYValue:()=>WithoutLastYValue,default:()=>sparkline_stories});var sparkline=__webpack_require__("./src/components/charts/sparkline/sparkline.vue"),theme=__webpack_require__("./src/utils/charts/theme.js"),container=__webpack_require__("./src/utils/story_decorators/container.js"),chartData=[["Mon",10],["Tue",15],["Wed",9],["Thu",22],["Fri",29],["Sat",20],["Sun",18]],customGradient=[(0,theme.VR)(0),(0,theme.VR)(1),(0,theme.VR)(2)],generateProps=function(){var{data=chartData,height=50,tooltipLabel="tooltipLabel",showLastYValue=!0,gradient,smooth}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return{data,height,tooltipLabel,showLastYValue,gradient,smooth}},Template=args=>({components:{GlSparklineChart:sparkline.default},props:Object.keys(args),template:'\n    <gl-sparkline-chart\n      :data="data"\n      :height="height"\n      :tooltip-label="tooltipLabel"\n      :show-last-y-value="showLastYValue"\n      :gradient="gradient"\n      :smooth="smooth"\n    />\n  '}),Default=Template.bind({});Default.args=generateProps();var WithoutLastYValue=Template.bind({});WithoutLastYValue.args=generateProps({showLastYValue:!1}),WithoutLastYValue.tags=["skip-visual-test"];var WithChartColorGradient=Template.bind({});WithChartColorGradient.args=generateProps({gradient:customGradient});var WithSmoothing=Template.bind({});WithSmoothing.args=generateProps({smooth:.5}),WithSmoothing.tags=["skip-visual-test"];var AutoHeight=Template.bind({});Object.assign(AutoHeight,{args:generateProps({height:"auto"}),decorators:[(0,container.F)({height:"300px"})]});let sparkline_stories={title:"charts/sparkline-chart",component:sparkline.default,parameters:{docs:{description:{component:"\nThis is a basic sparkline chart.\n\n### Implementation Details\n\nThis component wraps the GitLab UI `chart` component, which in turn wraps the ECharts component.\n\nSee the [chart](./?path=/story/charts-chart--default) component for more info.\n"}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => ({\n  components: {\n    GlSparklineChart\n  },\n  props: Object.keys(args),\n  template: `\n    <gl-sparkline-chart\n      :data="data"\n      :height="height"\n      :tooltip-label="tooltipLabel"\n      :show-last-y-value="showLastYValue"\n      :gradient="gradient"\n      :smooth="smooth"\n    />\n  `\n})',...Default.parameters?.docs?.source}}},WithoutLastYValue.parameters={...WithoutLastYValue.parameters,docs:{...WithoutLastYValue.parameters?.docs,source:{originalSource:'args => ({\n  components: {\n    GlSparklineChart\n  },\n  props: Object.keys(args),\n  template: `\n    <gl-sparkline-chart\n      :data="data"\n      :height="height"\n      :tooltip-label="tooltipLabel"\n      :show-last-y-value="showLastYValue"\n      :gradient="gradient"\n      :smooth="smooth"\n    />\n  `\n})',...WithoutLastYValue.parameters?.docs?.source}}},WithChartColorGradient.parameters={...WithChartColorGradient.parameters,docs:{...WithChartColorGradient.parameters?.docs,source:{originalSource:'args => ({\n  components: {\n    GlSparklineChart\n  },\n  props: Object.keys(args),\n  template: `\n    <gl-sparkline-chart\n      :data="data"\n      :height="height"\n      :tooltip-label="tooltipLabel"\n      :show-last-y-value="showLastYValue"\n      :gradient="gradient"\n      :smooth="smooth"\n    />\n  `\n})',...WithChartColorGradient.parameters?.docs?.source}}},WithSmoothing.parameters={...WithSmoothing.parameters,docs:{...WithSmoothing.parameters?.docs,source:{originalSource:'args => ({\n  components: {\n    GlSparklineChart\n  },\n  props: Object.keys(args),\n  template: `\n    <gl-sparkline-chart\n      :data="data"\n      :height="height"\n      :tooltip-label="tooltipLabel"\n      :show-last-y-value="showLastYValue"\n      :gradient="gradient"\n      :smooth="smooth"\n    />\n  `\n})',...WithSmoothing.parameters?.docs?.source}}},AutoHeight.parameters={...AutoHeight.parameters,docs:{...AutoHeight.parameters?.docs,source:{originalSource:'args => ({\n  components: {\n    GlSparklineChart\n  },\n  props: Object.keys(args),\n  template: `\n    <gl-sparkline-chart\n      :data="data"\n      :height="height"\n      :tooltip-label="tooltipLabel"\n      :show-last-y-value="showLastYValue"\n      :gradient="gradient"\n      :smooth="smooth"\n    />\n  `\n})',...AutoHeight.parameters?.docs?.source}}}}}]);